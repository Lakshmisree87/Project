  MAIN.tf 
  ===============================
    
  provider "aws" {
    profile = "default"
    region  = var.aws_region
  }
  
  data "aws_ami" "ubuntu" {
    most_recent = true
  
    filter {
      name   = "name"
      values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
    }
  
    filter {
      name   = "virtualization-type"
      values = ["hvm"]
    }
  
    owners = ["099720109477"]
  
  }
    
    resource "aws_security_group" "web_traffic" {
    name        = "Jenkins_secgrp"
    description = "Allow ssh and standard http/https ports inbound and everything outbound"
  
    dynamic "ingress" {
      iterator = port
      for_each = var.ingressrules
      content {
        from_port   = port.value
        to_port     = port.value
        protocol    = "TCP"
        cidr_blocks = ["0.0.0.0/0"]
      }
    }
  
    egress {
      from_port   = 0
      to_port     = 0
      protocol    = "-1"
      cidr_blocks = ["0.0.0.0/0"]
    }
  
    tags = {
      "Terraform" = "true"
    }
  }
  
  resource "aws_instance" "jenkins_VM1" {
    ami             = data.aws_ami.ubuntu.id
    instance_type   = "t2.micro"
    security_groups = [aws_security_group.web_traffic.name]
    key_name        = var.key_name
  
    provisioner "remote-exec" {
        inline = [
          "wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -",
          "sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'",
          "sudo apt update -qq",
          "sudo apt install software-properties-common -y",
          "sudo add-apt-repository ppa:deadsnakes/ppa -y",
          "sudo apt install -y python",
          "sudo apt install -y openjdk-11-jdk",
          "sudo apt install jenkins -y",
          "JAVA_HOME=/usr/lib/jvm/openjdk-11",
          "PATH=$PATH:$JAVA_HOME/bin",
          "export PATH",
          "sudo systemctl start jenkins",
        ]
      }
    connection {
      type        = "ssh"
      host        = self.public_ip
      user        = "ubuntu"
      private_key = file("./labkp1.pem")
    }
    tags = {
      "Name"      = "Jenkins_VM1"
      "Terraform" = "true"
    }
  }
  resource "aws_instance" "jenkins_VM2" {
    ami             = data.aws_ami.ubuntu.id
    instance_type   = "t2.micro"
    security_groups = [aws_security_group.web_traffic.name]
    key_name        = var.key_name
  
    provisioner "remote-exec" {
      inline = [
        "sudo apt update -qq",
        "sudo apt install software-properties-common -y",
        "sudo apt install -y openjdk-11-jdk",
        "sudo apt-add-repository universe",
        "sudo apt install -y maven",
        "sudo apt install -y docker.io",
        "sudo apt install -y ansible",
        "sudo apt install -y git",
        "sudo curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash",
        ]
    }
    connection {
      type        = "ssh"
      host        = self.public_ip
      user        = "ubuntu"
      private_key = file("./labkp1.pem")
    }
    tags = {
      "Name"      = "Jenkins_VM2"
      "Terraform" = "true"
    }
  }
  
  ---------------------------
  
  var.tf
  variable "aws_region" {
  default = "us-west-2"
}

variable "key_name" {
    default = "labkp1"
}

variable "vpc_id" {
    default = "vpc-0815e103c867d40e2"
}

variable "cidr_block" {
    default = "10.0.0.0/16"
}

variable "ingressrules" {
   type    = list(number)
   default = [22, 8080]
  }
  --------------------
  